/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package secapp;

import com.mongodb.BasicDBObject;
import com.mongodb.DBCollection;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import java.awt.Color;
import java.awt.Font;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.bson.Document;

/**
 *
 * @author Dieudo M
 */
public class GradebookOLD extends javax.swing.JPanel {

    /**
     * Creates new form Gradebook
     */
    public GradebookOLD() {
        initComponents();
                
        table_gradebook.setShowGrid(true);
        table_gradebook.setGridColor(new Color(54,33,89));
        table_gradebook.setRowHeight(table_gradebook.getRowHeight() + 8);
        JTableHeader header = table_gradebook.getTableHeader();
        //header.setDefaultRenderer(String.class, new MultiLineCellRenderer());
        header.setBackground(new Color(54,33,89));
       // header.setForeground(Color.yellow);
        header.setFont(new Font("Segoe UI", Font.BOLD, 14));
        System.out.println("Before the method");
        getData2(); 
        System.out.println("After the method");

        
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_gradebook = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(81, 53, 113));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Test Title");

        table_gradebook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(table_gradebook);
        if (table_gradebook.getColumnModel().getColumnCount() > 0) {
            table_gradebook.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            table_gradebook.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            table_gradebook.getColumnModel().getColumn(2).setHeaderValue("Title 3");
        }
        ListSelectionModel listSelectionModel = table_gradebook.getSelectionModel();
        listSelectionModel.addListSelectionListener(createSelectionListener());
        table_gradebook.setSelectionModel(listSelectionModel);

        jLabel4.setBackground(new java.awt.Color(81, 53, 113));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Course Code");

        jLabel2.setBackground(new java.awt.Color(81, 53, 113));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Mark");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(211, 211, 211)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(357, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
public FindIterable<Document> documents = null;
    
    final void getData2() {
        MongoCollection coll = MongoUtil.getCollection("marks");
        documents = coll.find();
        String[] columnNames = {"testTitle", "courseCode", "marks"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        int counter = 0;
        for (Document obj : documents) {
            String testTitle = (String) obj.get("Title");
            String courseCode = (String) obj.get("course_code");
            String studentID = (String) obj.get("Student_ID");
            String marks = (String) obj.get("total");
            //int marks2 = (int) obj.get("total");
            if (studentID == Home.username)
            model.addRow(new Object[]{testTitle, courseCode, marks});
        }
       
  
        table_gradebook.setModel(model);
      table_gradebook.setTableHeader(null);
    }
    
//    public void getDistinct(){
//         DBCollection collection = (DBCollection) MongoUtil.db.getCollection("marks");
//        List distinctCity = collection.distinct("studentID");
//        for (int i = 0; i < distinctCity.size(); i++) {
//            BasicDBObject query = new BasicDBObject();
//            query.put("cityname", distinctCity.get(i));
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_gradebook;
    // End of variables declaration//GEN-END:variables

    private ListSelectionListener createSelectionListener() {
       return (ListSelectionEvent e) -> {
            Object valueAt = table_gradebook.getValueAt(table_gradebook.getSelectedRow(), WIDTH);
        }; //To change body of generated methods, choose Tools | Templates.
    }
}
