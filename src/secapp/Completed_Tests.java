/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package secapp;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author Dieudo M
 */
public class Completed_Tests extends javax.swing.JPanel {

    /**
     * Creates new form Completed_Tests
     */
    public Completed_Tests() {
        initComponents();
        getData2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        completed = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        completed_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        completed.setBackground(new java.awt.Color(255, 255, 255));

        completed_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(completed_table);
        ListSelectionModel listSelectionModel = completed_table.getSelectionModel();
        listSelectionModel.addListSelectionListener(createSelectionListener());
        completed_table.setSelectionModel(listSelectionModel);

        jLabel1.setText("Test Title");

        jLabel2.setText("Mark");

        jLabel3.setText("jLabel1");

        jLabel4.setText("Course Code");

        javax.swing.GroupLayout completedLayout = new javax.swing.GroupLayout(completed);
        completed.setLayout(completedLayout);
        completedLayout.setHorizontalGroup(
            completedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(completedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(completedLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140)
                .addComponent(jLabel4)
                .addGap(129, 129, 129)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(142, 142, 142))
        );
        completedLayout.setVerticalGroup(
            completedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(completedLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(completedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(completed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(completed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
Date createDateFromDateTime(String date, String time) {
        date += " " + time;
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/YYYY hh:mm");
        try {
            return formatter.parse(date);
        } catch (ParseException ex) {
            Logger.getLogger(Available_tests.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }
    public FindIterable<Document> documents = null;

    final void getData2() {
        MongoCollection coll = MongoUtil.getCollection("marks");
        documents = coll.find();
        String[] columnNames = {"Test Description", "Course Code", "Open/Closed"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        int counter = 0;
        for (Document obj : documents) {
            String testTitle = (String) obj.get("Title");
            String courseCode = (String) obj.get("course_code");
            String studenID = (String) obj.get("Student_ID");
            
           
            model.addRow(new Object[]{testTitle, courseCode, studenID});
//            table.getTableHeader().setFont(new Font(Font.SERIF, Font.BOLD, 20));
//            table.getTableHeader().setBackground(new Color(122,71,221));
        }
       completed_table.setModel(model);
      completed_table.setTableHeader(null);
        //table.setIntercellSpacing(new Dimension (10,20));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel completed;
    private javax.swing.JTable completed_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private ListSelectionListener createSelectionListener() {
        return (ListSelectionEvent e) -> {
            Object valueAt = completed_table.getValueAt(completed_table.getSelectedRow(), WIDTH);
        };
            //Date date = (Date) table.getValueAt(table.getSelectedRow(), 2);// the 3 is the index of the date

//                btnStartTest.setEnabled(true);/*date.compareTo(new Date(System.currentTimeMillis()))<=0);*/
       
    }
    
}