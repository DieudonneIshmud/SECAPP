/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package secapp;

import javax.swing.JEditorPane;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.List;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;
import java.util.ArrayList;
import java.util.Arrays;
/**
 *
 * @author Dieudo M
 */
public class Pending_Tests extends javax.swing.JPanel {
    
    int Min, Sec;
    private Timer timer;
    private int[] time;
    final int MIN = 0;
    final int SEC = 1;
    static Pending_Tests pending;
    static all_answers answers;
    static Completed_Tests completed;
    ArrayList<String> arr;
    private MongoClient mongoClient = null;
    private FindIterable<Document> documents = null;

    private MongoDatabase db = null;
    private List<Document> QuestionsList;
    
    /**
     * Creates new form Pending_Tests
     */
    public Pending_Tests() {
        initComponents();
        q2_btn.setVisible(false) ;
        q3_btn.setVisible(false);
        q4_btn.setVisible(false);
        finishButton.setVisible(false);
        //QuestionsDetails();
//        btnPrevious.setVisible(false);
        //completed =  new Completed_Tests();
GridBagLayout layout =  new GridBagLayout();
        //completed =  new Completed_Tests();
        //pending = new Pending_Tests();
        arr = new ArrayList<String>();
        answers =  new all_answers(arr); //  all_answers(arr);;
    questionDisplay.setLayout(layout);
//        // 75%
GridBagConstraints c =  new GridBagConstraints();
c.gridx =0;
c.gridy=0;
questionDisplay.add(answers,c);
answers.setVisible(false);
//        c.gridx =0;
//        c.gridy=0;
    }
     public void displayTime(int min, int sec){
        String minute = String.format("%02d",min);
        String second = (String.format("%02d",sec));
        count.setText(minute + ":" + second);
    }
     public void startCountdown(String time, String message){
        this.time = convertTimeToInt(time.split(":"));
        this.message.setText(message);
        count.setText(time);
        timer = new Timer(1000,new TimerListener());
        timer.setRepeats(true);
        timer.start();

    }
     public int[] convertTimeToInt(String[] time){
        int[] converted = new int[time.length];
        for(int i = 0; i<time.length; i++){
            converted[i] = Integer.valueOf(time[i]);
        }
        return converted;
    }
     private class TimerListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            if(time[MIN] == 0 && (time[SEC] == 1 || time[SEC] == 0)){
                count.setText("");
                message.setText("END");
                timer.stop();
            }else if(time[SEC] > 0){
                time[SEC] -= 1;
                displayTime(time[MIN], time[SEC]);
            }else if(time[SEC] == 0){
                time[SEC] = 59;
                time[MIN] -= 1;
                displayTime(time[MIN], time[SEC]);
            }

            count.setForeground(time[MIN] == 0 && time[SEC] >= 6 ? Color.BLACK : Color.RED);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionDisplay = new javax.swing.JPanel();
        questions = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        question_area = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        answer_area = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        message = new javax.swing.JLabel();
        q1_btn = new javax.swing.JButton();
        q2_btn = new javax.swing.JButton();
        q3_btn = new javax.swing.JButton();
        q4_btn = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        questionNumber = new javax.swing.JLabel();
        count = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        questionDisplay.setBackground(new java.awt.Color(255, 255, 255));

        questions.setBackground(new java.awt.Color(255, 255, 255));

        question_area.setEditable(false);
        question_area.setBackground(new java.awt.Color(255, 255, 255));
        question_area.setColumns(20);
        question_area.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        question_area.setForeground(new java.awt.Color(51, 0, 51));
        question_area.setRows(5);
        question_area.setText("\"Running a\n program on a super computer with a certain amount of ressources \ndoes not garanty high performance \"Explain");
        jScrollPane1.setViewportView(question_area);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Answer");

        answer_area.setBackground(new java.awt.Color(255, 255, 255));
        answer_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                answer_areaActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(54, 33, 89));
        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText("Next>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(54, 33, 89));
        btnPrevious.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 255, 255));
        btnPrevious.setText("<Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        message.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        message.setText("Message");

        q1_btn.setBackground(new java.awt.Color(54, 33, 89));
        q1_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        q1_btn.setForeground(new java.awt.Color(255, 255, 255));
        q1_btn.setText("Q1");
        q1_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q1_btnActionPerformed(evt);
            }
        });

        q2_btn.setBackground(new java.awt.Color(54, 33, 89));
        q2_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        q2_btn.setForeground(new java.awt.Color(255, 255, 255));
        q2_btn.setText("Q2");
        q2_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q2_btnActionPerformed(evt);
            }
        });

        q3_btn.setBackground(new java.awt.Color(54, 33, 89));
        q3_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        q3_btn.setForeground(new java.awt.Color(255, 255, 255));
        q3_btn.setText("Q3");
        q3_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q3_btnActionPerformed(evt);
            }
        });

        q4_btn.setBackground(new java.awt.Color(54, 33, 89));
        q4_btn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        q4_btn.setForeground(new java.awt.Color(255, 255, 255));
        q4_btn.setText("Q4");
        q4_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q4_btnActionPerformed(evt);
            }
        });

        finishButton.setBackground(new java.awt.Color(54, 33, 89));
        finishButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        finishButton.setForeground(new java.awt.Color(255, 255, 255));
        finishButton.setText("Finish");
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        questionNumber.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        questionNumber.setText("Question 1/4");

        count.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        count.setText("0:0");

        javax.swing.GroupLayout questionsLayout = new javax.swing.GroupLayout(questions);
        questions.setLayout(questionsLayout);
        questionsLayout.setHorizontalGroup(
            questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(questionsLayout.createSequentialGroup()
                        .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(questionsLayout.createSequentialGroup()
                                .addComponent(q1_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(q2_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(q3_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(q4_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(questionNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                                .addComponent(message)
                                .addGap(154, 154, 154))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                                .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(234, 234, 234))))
                    .addComponent(answer_area)
                    .addGroup(questionsLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNext)
                .addContainerGap())
            .addGroup(questionsLayout.createSequentialGroup()
                .addGap(435, 435, 435)
                .addComponent(finishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        questionsLayout.setVerticalGroup(
            questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(questionsLayout.createSequentialGroup()
                        .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(questionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(q1_btn)
                            .addComponent(q2_btn)
                            .addComponent(q3_btn)
                            .addComponent(q4_btn)))
                    .addGroup(questionsLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(message)))
                .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addGap(59, 59, 59))
                    .addGroup(questionsLayout.createSequentialGroup()
                        .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(questionsLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(questionsLayout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(btnPrevious)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answer_area, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(finishButton)
                .addContainerGap(305, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout questionDisplayLayout = new javax.swing.GroupLayout(questionDisplay);
        questionDisplay.setLayout(questionDisplayLayout);
        questionDisplayLayout.setHorizontalGroup(
            questionDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionDisplayLayout.createSequentialGroup()
                .addComponent(questions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        questionDisplayLayout.setVerticalGroup(
            questionDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionDisplayLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(questions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(questionDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(questionDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // THIS ARE THE CONNECTION DETAILS TO MONGODB.... needs to be put in a public method
    //public static void connectionMongo (){
        
//    int port_no = 27017;
//	String host_name = "localhost", db_name = "SECAPP", db_coll_name = "testa";
//        String client_url = "mongodb://" + host_name + ":" + port_no + "/" + db_name;
//        MongoClientURI uri = new MongoClientURI(client_url);
//    MongoClient mongo_client = new MongoClient(uri);
//    MongoDatabase db = mongo_client.getDatabase(db_name);
//                MongoCollection<Document> coll = db.getCollection(db_coll_name);
//        
    //}
    
                // Fetching the database from the mongodb.
                
		
    
    
    private void q1_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q1_btnActionPerformed
        // TODO add your handling code here:
        //String value  = coll.find().projection(Projections.include("answer")).first().getString("answer"); // Optiom 1
        //question_area.setText(value);
       
        
    }//GEN-LAST:event_q1_btnActionPerformed

    private void q2_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q2_btnActionPerformed
        // TODO add your handling code here:
        //String question2 = QuestionsList.get(1).toJson(); // Givinga an error because a Document cannot convert into String.
        //question_area.setText(question2);
    }//GEN-LAST:event_q2_btnActionPerformed

    private void q3_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q3_btnActionPerformed
        // TODO add your handling code here:
        String question3 =  "This is question three";
        question_area.setText(question3);
    }//GEN-LAST:event_q3_btnActionPerformed

    private void q4_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q4_btnActionPerformed
        // TODO add your handling code here:
        String question4 =  "This is question four";
        question_area.setText(question4);
    }//GEN-LAST:event_q4_btnActionPerformed

    private void answer_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_answer_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_answer_areaActionPerformed
    static String question1,answer1;
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        //btnNext.setVisible();
        q1_btn.setVisible(false);
        q2_btn.setVisible(true);
        question1 = question_area.getText();
        answer1 = answer_area.getText();
        arr.add(answer1);
        questions.setVisible(true);
        questionNumber.setText("Question 2/2");
        //question_area.setText("");
        question_area.setText(" This is the second Test");
        btnPrevious.setVisible(true);
        finishButton.setVisible(true);
        
      //  if (answer_area)
        
        
        
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        questions.setVisible(true);
         questionNumber.setText("AJFJFAF");
        String q2 = q2_btn.getText();
        String answer2 = question_area.getText();
        question_area.setText(question1);
        answer_area.setText(answer1);
       btnNext.setVisible(true);
        
    }//GEN-LAST:event_btnPreviousActionPerformed
 public static final String NEW_LINE = System.getProperty("line.separator");
    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishButtonActionPerformed
        // TODO add your handling code here:
        questions.setVisible(false);
        answers.setVisible(true);
        
         String q2 = q2_btn.getText();
        String answer2 = answer_area.getText();
        arr.add(answer2);
        
        JEditorPane ansList = answers.getAnswersList();
        String all = null;
        for(int i = 0; i < arr.size(); i++) {   
            
            all += arr.get(i)+"\n\r";                 
        //System.out.println(arr.get(i));
} 
        ansList.setText(all);
boolean hasNewline = all.contains(NEW_LINE);
            if (hasNewline){
                
            }

         
        
        
       //
       //questions.setVisible(false);
       
    }//GEN-LAST:event_finishButtonActionPerformed

    final void connect() {
        mongoClient = new MongoClient("localhost", 27017);
        db = mongoClient.getDatabase("SECAPP");
    }
    
    final void disconnect(){
        mongoClient.close();
    }
    
    final void QuestionsDetails() {
        MongoCollection coll = db.getCollection("testq");
        documents = coll.find();
        String[] questionDetails = {"id", "Test description", "Course code", "Date", "Time", "Open/Closed"};
        //DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        int counter = 0;
        for (Document obj : documents) {
            String questionNumber = (String) obj.get("QNo");
            String questionType = (String) obj.get("QType");
            //Date date = getDate((String) obj.get("Date"));
            String questionText = (String) obj.get("QText");
            String duratation = (String) obj.get("Duration");
            System.out.println(questionNumber + " " + questionType+ " " + questionText);
            //ObjectId id = (ObjectId) obj.get("_id");
            //model.addRow(new Object[]{id, testTitle, courseCode, date, duratation, openORclosed});
          QuestionsList = (List<Document>)obj.get("Questions");
          
               
          //out.println(list.get(0)); // display specific field

        }
        System.out.println(Arrays.toString(QuestionsList.toArray()));
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answer_area;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JLabel count;
    private javax.swing.JButton finishButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel message;
    private javax.swing.JButton q1_btn;
    private javax.swing.JButton q2_btn;
    private javax.swing.JButton q3_btn;
    private javax.swing.JButton q4_btn;
    private javax.swing.JPanel questionDisplay;
    private javax.swing.JLabel questionNumber;
    private javax.swing.JTextArea question_area;
    private javax.swing.JPanel questions;
    // End of variables declaration//GEN-END:variables
}
