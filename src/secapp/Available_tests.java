/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package secapp;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.model.Filters;
import java.awt.Dimension;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.conversions.Bson;
import org.bson.types.ObjectId;

/**
 *
 * @author Dieudo M
 */
public class Available_tests extends javax.swing.JPanel {

    /**
     * Creates new form Available_tests
     */
    //private static JTable table;
    Pending_Tests pending;

    public Available_tests() {
        initComponents();
        getData();
        //JPanel panel = new JPanel(new BorderLayout());
        //JButton button = new JButton("Show Data");
        //button.addActionListener(listener);
        //Available.add(new JScrollPane(table));
        //Available.add(button, BorderLayout.PAGE_END);
        //JOptionPane.showMessageDialog(null, Available);
    }

    ;
        
   
    
        
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Available = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnStartTest = new javax.swing.JButton();
        button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        Available.setBackground(new java.awt.Color(255, 255, 255));
        Available.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnStartTest.setBackground(new java.awt.Color(54, 33, 89));
        btnStartTest.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        btnStartTest.setForeground(new java.awt.Color(255, 255, 255));
        btnStartTest.setText("Start Test");
        btnStartTest.setEnabled(false);
        btnStartTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartTestActionPerformed(evt);
            }
        });

        button.setBackground(new java.awt.Color(54, 33, 89));
        button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button.setForeground(new java.awt.Color(255, 255, 255));
        button.setText("Refresh");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnStartTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnStartTest)
                .addGap(40, 40, 40)
                .addComponent(button)
                .addContainerGap(307, Short.MAX_VALUE))
        );

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        table.setGridColor(new java.awt.Color(204, 204, 255));
        jScrollPane1.setViewportView(table);
        ListSelectionModel listSelectionModel = table.getSelectionModel();
        listSelectionModel.addListSelectionListener(createSelectionListener());
        table.setSelectionModel(listSelectionModel);

        jLabel1.setText("Test Description");

        jLabel2.setText("Course Code");

        jLabel3.setText("Date & Time");

        jLabel4.setText("Open/Closed");

        jLabel5.setText("Duration");

        javax.swing.GroupLayout AvailableLayout = new javax.swing.GroupLayout(Available);
        Available.setLayout(AvailableLayout);
        AvailableLayout.setHorizontalGroup(
            AvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AvailableLayout.createSequentialGroup()
                .addGroup(AvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AvailableLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 855, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(AvailableLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        AvailableLayout.setVerticalGroup(
            AvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AvailableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(AvailableLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(AvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Available, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Available, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
        getData();
    }//GEN-LAST:event_buttonActionPerformed

    private void btnStartTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartTestActionPerformed
        // TODO add your handling code here:
        String testName = (String) table.getValueAt(table.getSelectedRow(), 0);
        String duration = (String) table.getValueAt(table.getSelectedRow(), 3);
        duration += ":00";
        Bson bsonFilter = Filters.eq("Title", testName);
        FindIterable<Document> findIt = documents.filter(bsonFilter);
        System.out.println("Result is: " + findIt.first());
        Home.pending_Tests.startCountdown(duration, findIt.first());
        this.setVisible(false);
        Home.pending_Tests.setVisible(true);
    }//GEN-LAST:event_btnStartTestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Available;
    private javax.swing.JButton btnStartTest;
    private javax.swing.JButton button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    public FindIterable<Document> documents = null;

    private Date getDate(String date) {
        Date dateObject = Date.from(Instant.parse(date));
        return dateObject;
    }

    Date createDateFromDateTime(String date, String time) {
        date += " " + time;
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/YYYY hh:mm");
        try {
            return formatter.parse(date);
        } catch (ParseException ex) {
            Logger.getLogger(Available_tests.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    private ListSelectionListener createSelectionListener() {

        return (ListSelectionEvent e) -> {
//            Object valueAt = table.getValueAt(table.getSelectedRow(), WIDTH);
            Date date = (Date) table.getValueAt(table.getSelectedRow(), 2);// the 3 is the index of the date
            if (date.compareTo(new Date(System.currentTimeMillis())) <= 0) {
                btnStartTest.setEnabled(true);
            } else {
                btnStartTest.setEnabled(false);
            }
//                btnStartTest.setEnabled(true);/*date.compareTo(new Date(System.currentTimeMillis()))<=0);*/
        };
    }

    final void getData() {
        MongoCollection coll = MongoUtil.getCollection("testq");
        documents = coll.find();
        String[] columnNames = {"Test Description", "Course Code", "Date", "Time", "Open/Closed"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        int counter = 0;
        for (Document obj : documents) {
            String testTitle = (String) obj.get("Title");
            String courseCode = (String) obj.get("course_code");
            String dateS = obj.getString("Date");
            String timeS = obj.getString("Time");
            Date date = createDateFromDateTime(dateS, timeS);
            String openORclosed = (String) obj.get("Closed/Open");
            Object duratation = obj.get("Duration");
            ObjectId id = (ObjectId) obj.get("_id");
            model.addRow(new Object[]{testTitle, courseCode, date, duratation, openORclosed});
//            table.getTableHeader().setFont(new Font(Font.SERIF, Font.BOLD, 20));
//            table.getTableHeader().setBackground(new Color(122,71,221));
        }
        table.setModel(model);
        table.setTableHeader(null);
        //table.setIntercellSpacing(new Dimension (10,20));
    }
}
