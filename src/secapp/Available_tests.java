/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package secapp;

import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import java.awt.Color;
import java.awt.Font;
import java.net.UnknownHostException;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author Dieudo M
 */
public class Available_tests extends javax.swing.JPanel {

    private MongoClient mongoClient = null;
    private FindIterable<Document> documents = null;

    private MongoDatabase db = null;
    /**
     * Creates new form Available_tests
     */
    //private static JTable table;
    Pending_Tests pending;

    public Available_tests() {
        initComponents();
        connect();
        getData();
        //JPanel panel = new JPanel(new BorderLayout());
        //JButton button = new JButton("Show Data");
        //button.addActionListener(listener);
        //Available.add(new JScrollPane(table));
        //Available.add(button, BorderLayout.PAGE_END);
        //JOptionPane.showMessageDialog(null, Available);
    }

    ;
        
   
    
        
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Available = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnStartTest = new javax.swing.JButton();
        button = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        Available.setBackground(new java.awt.Color(255, 255, 255));
        Available.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        table.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "", " ", "", "", "", ""
            }
        ));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(122, 71, 221));
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        table.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        table.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        table.getSelectionModel().addListSelectionListener(createSelectionListener());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnStartTest.setBackground(new java.awt.Color(54, 33, 89));
        btnStartTest.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        btnStartTest.setForeground(new java.awt.Color(255, 255, 255));
        btnStartTest.setText("Start Test");
        btnStartTest.setEnabled(false);
        btnStartTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartTestActionPerformed(evt);
            }
        });

        button.setBackground(new java.awt.Color(54, 33, 89));
        button.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button.setForeground(new java.awt.Color(255, 255, 255));
        button.setText("Refresh");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnStartTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnStartTest)
                .addGap(40, 40, 40)
                .addComponent(button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AvailableLayout = new javax.swing.GroupLayout(Available);
        Available.setLayout(AvailableLayout);
        AvailableLayout.setHorizontalGroup(
            AvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AvailableLayout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        AvailableLayout.setVerticalGroup(
            AvailableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AvailableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AvailableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Available, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Available, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 211, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
        getData();
    }//GEN-LAST:event_buttonActionPerformed

    private void btnStartTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartTestActionPerformed
        // TODO add your handling code here:
        String testName = (String) table.getValueAt(table.getSelectedRow(), 1);
        String duration = (String) table.getValueAt(table.getSelectedRow(), 4);
        duration += ":00";
        Home.pending_Tests.startCountdown(duration, testName);
        this.setVisible(false);
        Home.pending_Tests.setVisible(true);
    }//GEN-LAST:event_btnStartTestActionPerformed

    private void tablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tablePropertyChange

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Available;
    private javax.swing.JButton btnStartTest;
    private javax.swing.JButton button;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private Date getDate(String date) {
        Date dateObject = Date.from(Instant.parse(date));
        return dateObject;
    }

    private ListSelectionListener createSelectionListener() {

        return (ListSelectionEvent e) -> {
            //table.getValueAt(table.getSelectedRow(), WIDTH)
            Date date = (Date) table.getValueAt(table.getSelectedRow(), 3);// the 3 is the index of the date 
            /* if(date.compareTo(new Date(System.currentTimeMillis()))<=0)
                btnStartTest.setEnabled(true);
            else
                btnStartTest.setEnabled(false);
             */
            btnStartTest.setEnabled(true);/*date.compareTo(new Date(System.currentTimeMillis()))<=0);*/

        };
    }

    final void connect() {
        mongoClient = new MongoClient("localhost", 27017);
        db = mongoClient.getDatabase("SECAPP");
    }
    
    final void disconnect(){
        mongoClient.close();
    }

    final void getData() {
        MongoCollection coll = db.getCollection("testq");
        documents = coll.find();
        String[] columnNames = {"ID", "Test Description", "Course Code", "Date", "Time", "Open/Closed"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        int counter = 0;
        for (Document obj : documents) {
            String testTitle = (String) obj.get("Title");
            String courseCode = (String) obj.get("Course code");
            Date date = getDate((String) obj.get("Date"));
            String openORclosed = (String) obj.get("Open/Closed");
            String duratation = (String) obj.get("Duration");
            ObjectId id = (ObjectId) obj.get("_id");
            model.addRow(new Object[]{id, testTitle, courseCode, date, duratation, openORclosed});
            table.getTableHeader().setFont(new Font(Font.SERIF, Font.BOLD, 20));
            table.getTableHeader().setBackground(new Color(122,71,221));
        }
        table.setModel(model);
    }
}
